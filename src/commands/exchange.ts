import { Markup, Telegraf, Context } from "telegraf";
import crypto from "crypto";
import { giveExchangeMenu } from "../keyboards/giveExchangeMenu";
import { MySessionContext } from "../utils/types";
import { sendWebMenu } from "../keyboards/sendWebMenu";
import { config } from "../utils/config";

export const exchangeCommand = (bot: Telegraf<MySessionContext>) => {
  bot.hears("üí∏ –ö—É–ø–∏—Ç—å HELPA", (ctx) => {
    ctx.session = {} as any;
    ctx.session.state = "selectingSendCurrency";
    ctx.reply("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è");
    ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–Ω–µ—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏ üëá", giveExchangeMenu);
  });

  bot.hears(["USDTüí≤"], (ctx) => {
    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
    if (ctx.session.state === "selectingSendCurrency") {
      ctx.session.state = "selectingWebCurrency";
      ctx.session.sendCurrency = ctx.message.text;

      // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è
      let menu;
      switch (ctx.session.sendCurrency) {
        case "USDTüí≤":
          menu = sendWebMenu(config.usdtWebs);
          break;
      }
      // ctx.session.menuReceiveCurrency = menu;
      ctx.reply(
        `–í—ã –æ—Ç–¥–∞—ë—Ç–µ ${ctx.session.sendCurrency}
–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å –ø–æ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –º–æ–Ω–µ—Ç—É üëá`,
        menu
      );
    }
  });
  bot.hears(config.usdtWebs, (ctx) => {
    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
    if (ctx.session.state === "selectingWebCurrency")
      ctx.session.state = "enteringAmount";
    ctx.session.sendWebCurrency = ctx.message.text;

    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –ø–æ–ª—É—á–µ–Ω–∏—è
    let limitFrom = 0;
    let limitTo = 0;
    let currencyName = "";

    switch (ctx.session.sendCurrency) {
      case "USDTüí≤":
        limitFrom = 100;
        limitTo = 50000;
        currencyName = "üí≤USDT";

        break;
    }
    ctx.session.currencyName = currencyName;
    ctx.session.limitFrom = limitFrom;
    ctx.session.limitTo = limitTo;
  });
};
