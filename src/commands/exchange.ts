import { Markup, Telegraf, Context } from "telegraf";
import crypto from "crypto";
import { giveExchangeMenu } from "../keyboards/giveExchangeMenu";
import { MySessionContext } from "../utils/types";
import { sendWebMenu } from "../keyboards/sendWebMenu";
import { config } from "../utils/config";
import { mainMenu } from "../keyboards/mainMenu";

const { usdtWebs, mainMenuBtn, backBtn } = config;

export const exchangeCommand = (bot: Telegraf<MySessionContext>) => {
  bot.hears("üí∏ –ö—É–ø–∏—Ç—å HELPA", (ctx) => {
    ctx.session = {} as any;
    ctx.session.state = "selectingSendCurrency";
    ctx.reply("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è");
    ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–Ω–µ—Ç—É –æ—Ç–ø—Ä–∞–≤–∫–∏ üëá", giveExchangeMenu);
  });

  bot.hears(["USDTüí≤"], (ctx) => {
    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
    if (ctx.session.state === "selectingSendCurrency") {
      ctx.session.state = "selectingWebCurrency";
      ctx.session.sendCurrency = ctx.message.text;

      // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–∞–ª—é—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è
      let menu;
      switch (ctx.session.sendCurrency) {
        case "USDTüí≤":
          menu = sendWebMenu(usdtWebs);
          break;
      }
      // ctx.session.menuReceiveCurrency = menu;
      ctx.reply(
        `–í—ã –æ—Ç–¥–∞—ë—Ç–µ ${ctx.session.sendCurrency}
–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ç—å –ø–æ –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –º–æ–Ω–µ—Ç—É üëá`,
        menu
      );
    }
  });
  bot.hears(usdtWebs, (ctx) => {
    // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–µ—Ç–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
    if (ctx.session.state === "selectingWebCurrency") {
      ctx.session.state = "enteringAmount";
      ctx.session.sendWebCurrency = ctx.message.text;

      // –õ–æ–≥–∏–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –ø–æ–ª—É—á–µ–Ω–∏—è
      let limitFrom = 0;
      let limitTo = 0;
      let currencyName = "";

      switch (ctx.session.sendCurrency) {
        case "USDTüí≤":
          limitFrom = 100;
          limitTo = 50000;
          currencyName = "HELPA";

          break;
      }
      ctx.session.currencyName = currencyName;
      ctx.session.limitFrom = limitFrom;
      ctx.session.limitTo = limitTo;
      ctx.reply(
        `‚úçÔ∏è –ù–∞–ø–∏—à–∏ –º–Ω–µ —Å—É–º–º—É, –≤ ${ctx.session.sendCurrency} –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –æ–±–º–µ–Ω—è—Ç—å –æ—Ç ${ctx.session.limitFrom} –¥–æ ${ctx.session.limitTo} 
–ï—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Å—É–º–º—É –≤ ${ctx.session.currencyName} –∂–º–∏ ¬´–£–∫–∞–∑–∞—Ç—å —Å—É–º–º—É –≤ ${ctx.session.currencyName}¬ª`,
        Markup.keyboard([
          [`–£–∫–∞–∑–∞—Ç—å —Å—É–º–º—É –≤ ${ctx.session.currencyName}`],
          [mainMenuBtn, backBtn],
        ]).resize()
      );
    }
  });
  bot.on("text", async (ctx) => {
    let limitToRecieve = 0;
    let limitFromRecieve = 0;
    if (ctx.session.state === "enteringAmount") {
      const sendCurrency = ctx.session.sendCurrency;
      const rate = await getExchangeRate(sendCurrency);

      if (ctx.message.text === backBtn) {
        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É, —á—Ç–æ–±—ã –ø–æ–∑–≤–æ–ª–∏—Ç—å middleware –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —ç—Ç–æ
        return;
      }
      if (ctx.message.text === `–£–∫–∞–∑–∞—Ç—å —Å—É–º–º—É –≤ ${ctx.session.currencyName}`) {
        // –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã
        ctx.session.state = "enteringReceiveAmount";
        if (ctx.session.currencyName === "HELPA") {
          limitFromRecieve = 100000;
          limitToRecieve = 1000000;
        }
        ctx.session.limitFromRecieve = limitFromRecieve;
        ctx.session.limitToRecieve = limitToRecieve;
        ctx.reply(
          `–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å
–£–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –æ—Ç ${ctx.session.limitFromRecieve} –¥–æ ${ctx.session.limitToRecieve} –≤ ${ctx.session.currencyName}`,
          Markup.keyboard([
            [`–£–∫–∞–∑–∞—Ç—å —Å—É–º–º—É –≤ ${ctx.session.sendCurrency}`],
            [mainMenuBtn, backBtn],
          ]).resize()
        );
      } else if (
        !isNaN(Number(ctx.message.text)) &&
        isWithinLimits(
          Number(ctx.message.text),
          ctx.session.limitFrom,
          ctx.session.limitTo
        )
      ) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É
        // –î–∞–ª–µ–µ –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–±–º–µ–Ω–∞
        ctx.session.howToSend = Number(ctx.message.text);
        const howToRecieve = await getExchangeFormula(ctx, rate);
        ctx.session.howToRecieve = howToRecieve;
        ctx.session.state = "chooseSendBank";
        ctx.reply(
          `–í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ ${ctx.session.howToSend} ${ctx.session.sendCurrency}
–ö –ø–æ–ª—É—á–µ–Ω–∏—é ${howToRecieve} ${ctx.session.currencyName}
—É–∫–∞–∂–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è üëá`,
          mainMenu
        );
      } else {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ

        ctx.reply(
          `‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç ${
            ctx.session.state === "enteringAmount"
              ? ctx.session.limitFrom
              : ctx.session.limitFromRecieve
          } –¥–æ ${
            ctx.session.state === "enteringAmount"
              ? ctx.session.limitTo
              : ctx.session.limitToRecieve
          }
`
        );
      }
    } else if (
      ctx.message.text === `–£–∫–∞–∑–∞—Ç—å —Å—É–º–º—É –≤ ${ctx.session.sendCurrency}`
    ) {
      ctx.session.state = "enteringAmount";
      ctx.reply(
        `–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç ${ctx.session.limitFrom} –¥–æ ${ctx.session.limitTo} –≤ ${ctx.session.sendCurrency}`,
        Markup.keyboard([
          [`–£–∫–∞–∑–∞—Ç—å —Å—É–º–º—É –≤ ${ctx.session.currencyName}`],
          [mainMenuBtn, backBtn],
        ]).resize()
      );
    } else {
      // –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –æ—à–∏–±–∫–µ –∏ –ø—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É –∑–∞–Ω–æ–≤–æ
      ctx.reply(
        `‚ö†Ô∏è –í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç ${ctx.session.limitFromRecieve} –¥–æ ${ctx.session.limitToRecieve} –≤ ${ctx.session.currencyName}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:`,
        Markup.keyboard([
          [`–£–∫–∞–∑–∞—Ç—å —Å—É–º–º—É –≤ ${ctx.session.sendCurrency}`],
          [mainMenuBtn, backBtn],
        ]).resize()
      );
    }
  });
};

const getExchangeRate = async (value: string): Promise<number> => {
  const res = 0;
  if (value === "USDTüí≤") {
    const res = await Promise.resolve(1000);
    console.log(res);
  }
  return res;
};

function isWithinLimits(amount: number, min: number, max: number) {
  return amount >= min && amount <= max;
}

async function getExchangeFormula(ctx, rate): Promise<number> {
  let receiveSum = 0;
  if (0 >= ctx.session.amount) {
    ctx.reply(
      `‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç ${
        ctx.session.state === "enteringAmount"
          ? ctx.session.limitFrom
          : ctx.session.limitFromRecieve
      } –¥–æ ${
        ctx.session.state === "enteringAmount"
          ? ctx.session.limitTo
          : ctx.session.limitToRecieve
      }`
    );
    return;
  }

  if (ctx.session.state === "enteringAmount") {
    const initialReceiveSum = rate * ctx.message.text;
    receiveSum = Math.floor(initialReceiveSum - initialReceiveSum * comission);
  } else if (ctx.session.state === "enteringReceiveAmount") {
    const comissionRate = await howMuchComission(ctx, rate);
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—É–º–º—É –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å —É—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏
    receiveSum = Math.floor(ctx.message.text / (rate * (1 - comissionRate)));
  }
  return receiveSum;
}

const formatDate = (date: Date) => {
  return date.toLocaleString("ru-RU", {
    day: "2-digit",
    month: "2-digit",
    year: "numeric",
    hour: "2-digit",
    minute: "2-digit",
  });
};

const howMuchComission = async (ctx) => {
  let comission = 0;

  // const amount =
  //   ctx.session.state === "enteringAmount"
  //     ? ctx.message.text
  //     : ctx.session.state === "enteringReceiveAmount"
  //     ? ctx.message.text / rate
  //     : 0;

  if (ctx.session.sendCurrency === "USDTüí≤") {
    comission = 0.05;
  }

  return comission;
};
